def contains_iter(first: Node, last: Optional[Node], val: int) -> bool:
    """Check if the list contains a node with value val."""
    Requires(lseg(first, last))
    Ensures(lseg(first, last))
    ptr = first  # type: Optional[Node]
    result = False
    Fold(lseg(first, ptr))
    while ptr is not None and ptr is not last:
        Invariant(lseg(first, ptr))
        Invariant(lseg(ptr, last))
        Unfold(lseg(ptr, last))
        if Unfolding(lseg(ptr, last), ptr.val) == val:
            Fold(lseg(ptr, last))
            result = True
            break
        Unfold(lseg(ptr, last))  # Ensures lseg(ptr.next, last)
        tmp = ptr
        ptr = ptr.next
        Fold(lseg(ptr, ptr))
        Fold(lseg(tmp, ptr))
        join(first, tmp, ptr)  # Ensures lseg(first, ptr)
    join(first, ptr, last)
    return result
