def append_iter(head: Optional[Node], val: int) -> Node:
    """Append a new node with value val to the list."""
    Requires(lseg(head, None))
    Ensures(lseg(Result(), None))
    n = Node(val)
    Fold(lseg(None, None))
    Fold(lseg(n, None))
    if head is None:
        return n
    ptr = head  # type: Node
    Fold(lseg(head, ptr))
    while Unfolding(lseg(ptr, None), ptr.next) is not None:
        Invariant(lseg(head, ptr))
        Invariant(lseg(ptr, None))
        Unfold(lseg(ptr, None))
        tmp = ptr
        ptr = ptr.next
        Fold(lseg(ptr, ptr))
        Fold(lseg(tmp, ptr))
        join(head, tmp, ptr)
    Unfold(lseg(ptr, None))
    ptr.next = n
    Fold(lseg(ptr, None))
    join(head, ptr, None)
    return head
