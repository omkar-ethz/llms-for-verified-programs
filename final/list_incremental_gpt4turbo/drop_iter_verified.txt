@ContractOnly
def drop_iter(head: Node, val: int) -> Optional[Node]:
    Requires(Acc(head.val) and Acc(head.next) and is_list(head))
    Ensures(Implies(Result() is not None, is_list(Result())))
    
    ptr = head # type: Optional[Node]
    while ptr is not None:
        Invariant(Acc(ptr.val) and Acc(ptr.next) and is_list(ptr))
        if ptr.val == val:
            return ptr
        ptr = ptr.next
    return None