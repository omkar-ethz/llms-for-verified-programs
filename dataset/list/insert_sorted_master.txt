def insert_sorted(node: Node, head: Optional[Node]) -> Node:
    """Inserts the given node (given as a singleton list) into the sorted list."""
    Requires(is_list(node))
    Requires(Implies(head is not None, is_list(head)))
    Ensures(is_list(Result()))
    Unfold(is_list(node))
    if head is None:
        return node
    Fold(is_list(node))
    if Unfolding(is_list(node), node.val < Unfolding(is_list(head), head.val)):
        Unfold(is_list(node))
        node.next = head
        Fold(is_list(node))
        return node
    Unfold(is_list(head))
    head.next = insert_sorted(node, head.next)
    Fold(is_list(head))
    return head